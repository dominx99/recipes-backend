name: Symfony

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
jobs:
  my-instances:
    runs-on: ubuntu-latest
    name: List the display name and shape of the instances in my compartment
    # env:
    #   OCI_CLI_USER: ${{ secrets.OCI_USER_OCID }}
    #   OCI_CLI_TENANCY: ${{ secrets.OCI_TENANCY_OCID }}
    #   OCI_CLI_FINGERPRINT: ${{ secrets.OCI_FINGERPRINT }}
    #   OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_KEY_CONTENT }}
    #   OCI_CLI_REGION: ${{ secrets.OCI_REGION }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'oracle-1'
          path: ''
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Import Secrets
        uses: hashicorp/vault-action@v2
        with:
          url: http://vault.chylo.pl:8880
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            secret/data/recipes/backend DOMAIN
            secret/data/recipes/backend APP_ENV
            secret/data/recipes/backend APP_SECRET
            secret/data/recipes/backend DATABASE_URL
            secret/data/recipes/backend CORS_ALLOW_ORIGIN
      - name: Copy env
        run: 'envsubst < .env.tmpl > .env'
      -
        name: Build and push
        uses: docker/bake-action@v2
        with:
          push: true
          files: 'docker-compose.prod.yml'
          targets: 'php_recipes,nginx'
          set: |
            php_recipes.platform=linux/arm64
            nginx.platform=linux/arm64

      # - name: Retrieve the OCID of a named compartment in tenancy
      #   uses: oracle-actions/run-oci-cli-command@v1.1
      #   id: find-compartment-id
      #   with:
      #     command: 'iam compartment list'
      #
      # - name: 'Start App'
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.INSTANCE_IP }}
      #     username: opc
      #     key: ${{ secrets.OCI_PRIVATE_KEY }}
      #     script: |
